{
  "{\"sourceRoot\":\"/home/doa/fabric-samples/committeeApp/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/doa/fabric-samples/committeeApp\",\"filename\":\"/home/doa/fabric-samples/committeeApp/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/doa/fabric-samples/committeeApp\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/doa/fabric-samples/committeeApp",
      "filename": "/home/doa/fabric-samples/committeeApp/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/doa/fabric-samples/committeeApp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/doa/fabric-samples/committeeApp/src/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/doa/fabric-samples/committeeApp/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "delete process.env.http_proxy;\ndelete process.env.https_proxy;\n\nvar network = require('./fabric/network.js');\n\nimport 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst configPath = path.join(process.cwd(), './network-config.json');\nconst configJSON = fs.readFileSync(configPath, 'utf8');\nconst config = JSON.parse(configJSON);\nlet connection_file = config.connection_file;\nlet netAdmin = config.netAdmin;\nlet orgMSPID = config.orgMSPID;\nconst app = express();\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.get('/index', (req, sync) => {\n  console.log(\"Action\");\n});\napp.get('/queryAll', async (req, res) => {\n  // recover reviews of specific proposal in the front-end\n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryAll', '');\n  let parsedResponse = await JSON.parse(response);\n  res.send(parsedResponse);\n});\napp.post('/queryProposal', async (req, res) => {\n  // recover reviews of specific proposal in the front-end\n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryProposal', req.body.proposalID);\n  let parsedResponse = await JSON.parse(response);\n  res.send(parsedResponse);\n});\napp.post('/createProposal', async (req, res) => {\n  // add proposals\n  let networkObj = await network.connectToNetwork(req.body.userID);\n  console.log(typeof Object.values(req.body.args));\n  let response = await network.invoke(networkObj, false, 'createProposal', Object.values(req.body.args)); // let parsedResponse = await JSON.parse(response);\n\n  res.send(response);\n});\napp.post('/submitDecision', async (req, res) => {\n  // add rewiew to proposals\n  let networkObj = await network.connectToNetwork(req.body.userID);\n  console.log(typeof Object.values(req.body.args));\n  let response = await network.invoke(networkObj, false, 'reviewProposal', Object.values(req.body.args));\n  res.send(response);\n}); // app.get('/proposal/:proposalId', (req, res) => { // recover reviews of specific proposal in the front-end\n//   return res.send(query.queryAsset(req.params.proposalId));\n// });\n// app.post('/proposal', (req, res) => { // add proposals\n//   invoke.addProposal(...req.body.args);\n// });\n// app.post('/review', (req, res) => { // add rewiew to proposals\n//   invoke.addReview(...req.body.args);\n// });\n\napp.post('/registerUser', (req, res) => {\n  // add users with committee access control\n  network.registerUser(req.body.userID); // admin.enrollAdmin(req.body.userId);\n});\napp.listen(process.env.PORT, () => console.log(`Example app listening on port ${process.env.PORT}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "process",
        "env",
        "http_proxy",
        "https_proxy",
        "network",
        "require",
        "express",
        "cors",
        "fs",
        "path",
        "configPath",
        "join",
        "cwd",
        "configJSON",
        "readFileSync",
        "config",
        "JSON",
        "parse",
        "connection_file",
        "netAdmin",
        "orgMSPID",
        "app",
        "use",
        "json",
        "urlencoded",
        "extended",
        "get",
        "req",
        "sync",
        "console",
        "log",
        "res",
        "networkObj",
        "connectToNetwork",
        "response",
        "invoke",
        "parsedResponse",
        "send",
        "post",
        "body",
        "proposalID",
        "userID",
        "Object",
        "values",
        "args",
        "registerUser",
        "listen",
        "PORT"
      ],
      "mappings": "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",
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
      "sourcesContent": [
        "\n\n\ndelete process.env.http_proxy;\ndelete process.env.https_proxy;\n\nvar network = require('./fabric/network.js');\n\nimport 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\n\nconst fs = require('fs');\nconst path = require('path');\n\n\nconst configPath = path.join(process.cwd(), './network-config.json');\nconst configJSON = fs.readFileSync(configPath, 'utf8');\nconst config = JSON.parse(configJSON);\n\nlet connection_file = config.connection_file;\nlet netAdmin = config.netAdmin;\nlet orgMSPID = config.orgMSPID;\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }));\n\n\napp.get('/index', (req, sync) => {\n  console.log(\"Action\")\n});\n\napp.get('/queryAll', async (req, res) => { // recover reviews of specific proposal in the front-end\n  \n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryAll', '');\n  let parsedResponse = await JSON.parse(response);\n\n  res.send(parsedResponse);\n\n});\n\n\napp.post('/queryProposal', async (req, res) => { // recover reviews of specific proposal in the front-end\n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryProposal', req.body.proposalID);\n  let parsedResponse = await JSON.parse(response);\n\n  res.send(parsedResponse);\n});\n\n\napp.post('/createProposal', async (req, res) => { // add proposals\n  let networkObj = await network.connectToNetwork(req.body.userID);\n  console.log(typeof Object.values(req.body.args));\n  let response =  await network.invoke(networkObj, false, 'createProposal', Object.values(req.body.args));\n  // let parsedResponse = await JSON.parse(response);\n\n  res.send(response);\n\n});\n\napp.post('/submitDecision', async (req, res) => { // add rewiew to proposals\n  let networkObj = await network.connectToNetwork(req.body.userID);\n  console.log(typeof Object.values(req.body.args));\n  let response =  await network.invoke(networkObj, false, 'reviewProposal', Object.values(req.body.args));\n  res.send(response);\n\n});\n\n\n// app.get('/proposal/:proposalId', (req, res) => { // recover reviews of specific proposal in the front-end\n//   return res.send(query.queryAsset(req.params.proposalId));\n// });\n\n// app.post('/proposal', (req, res) => { // add proposals\n//   invoke.addProposal(...req.body.args);\n// });\n\n// app.post('/review', (req, res) => { // add rewiew to proposals\n//   invoke.addReview(...req.body.args);\n// });\n\napp.post('/registerUser', (req, res) => { // add users with committee access control\n  network.registerUser(req.body.userID);\n  // admin.enrollAdmin(req.body.userId);\n});\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}!`),\n);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1569412521637
  },
  "{\"sourceRoot\":\"/home/doa/fabric-samples/committeeApp/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/doa/fabric-samples/committeeApp\",\"filename\":\"/home/doa/fabric-samples/committeeApp/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/doa/fabric-samples/committeeApp\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/doa/fabric-samples/committeeApp",
      "filename": "/home/doa/fabric-samples/committeeApp/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/doa/fabric-samples/committeeApp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/doa/fabric-samples/committeeApp/src/app.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/doa/fabric-samples/committeeApp/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\ndelete process.env.http_proxy;\ndelete process.env.https_proxy;\n\nvar network = require('./fabric/network.js');\n\nvar utils = require('./utils/notarize.js'); // var utils = require('./utils')\n\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar configPath = path.join(process.cwd(), './network-config.json');\nvar configJSON = fs.readFileSync(configPath, 'utf8');\nvar config = JSON.parse(configJSON);\nvar connection_file = config.connection_file;\nvar netAdmin = config.netAdmin;\nvar orgMSPID = config.orgMSPID;\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.post('/notarize',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var fileDigest;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return utils.notarizeFile(req.body);\n\n          case 2:\n            fileDigest = _context.sent;\n            console.log(fileDigest);\n            return _context.abrupt(\"return\", res.send(fileDigest));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/body', function (req, res) {\n  console.log(req.body);\n});\napp.get('/index', function (req, res) {\n  console.log(\"HIT\\n\");\n  return res.send(JSON.parse('{\"msg\":\"My DNA is anchored in my blocks. Who am I\"}'));\n});\napp.get('/queryAll',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var networkObj, response, parsedResponse;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return network.connectToNetwork(netAdmin);\n\n          case 2:\n            networkObj = _context2.sent;\n            _context2.next = 5;\n            return network.invoke(networkObj, true, 'queryAll', '');\n\n          case 5:\n            response = _context2.sent;\n            _context2.next = 8;\n            return JSON.parse(response);\n\n          case 8:\n            parsedResponse = _context2.sent;\n            res.send(parsedResponse);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/queryProposal',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var networkObj, response, parsedResponse;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return network.connectToNetwork(netAdmin);\n\n          case 2:\n            networkObj = _context3.sent;\n            _context3.next = 5;\n            return network.invoke(networkObj, true, 'queryProposal', req.body.proposalID);\n\n          case 5:\n            response = _context3.sent;\n            _context3.next = 8;\n            return JSON.parse(response);\n\n          case 8:\n            parsedResponse = _context3.sent;\n            res.send(parsedResponse);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/createProposal',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var reqObj, networkObj, proposalObj, response;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // add proposals\n            reqObj = req.body;\n            _context4.next = 3;\n            return network.connectToNetwork(reqObj.userID);\n\n          case 3:\n            networkObj = _context4.sent;\n            _context4.next = 6;\n            return utils.notarizeFile(reqObj);\n\n          case 6:\n            proposalObj = _context4.sent;\n            _context4.next = 9;\n            return network.invoke(networkObj, false, 'createProposal', Object.values([proposalObj.digest, reqObj.filename, proposalObj.signature]));\n\n          case 9:\n            response = _context4.sent;\n            // let parsedResponse = await JSON.parse(response);\n            res.send(response);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/submitDecision',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var reqObj, networkObj, note, decisionObj, response;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // add rewiew to proposals\n            reqObj = req.body;\n            _context5.next = 3;\n            return network.connectToNetwork(reqObj.userID);\n\n          case 3:\n            networkObj = _context5.sent;\n            reqObj.datapayload = \"\";\n            console.log(reqObj);\n            note = reqObj.note == undefined ? \"\" : reqObj.note;\n            reqObj.datapayload = \"\".concat(reqObj.proposalID, \"&\").concat(reqObj.choice, \"&\").concat(note, \"\\n\");\n            _context5.next = 10;\n            return utils.notarizeFile(reqObj);\n\n          case 10:\n            decisionObj = _context5.sent;\n            _context5.next = 13;\n            return network.invoke(networkObj, false, 'submitDecision', Object.values([reqObj.proposalID, reqObj.choice, decisionObj.signature, note]));\n\n          case 13:\n            response = _context5.sent;\n            res.send(response);\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // app.get('/proposal/:proposalId', (req, res) => { // recover reviews of specific proposal in the front-end\n//   return res.send(query.queryAsset(req.params.proposalId));\n// });\n// app.post('/proposal', (req, res) => { // add proposals\n//   invoke.addProposal(...req.body.args);\n// });\n// app.post('/review', (req, res) => { // add rewiew to proposals\n//   invoke.addReview(...req.body.args);\n// });\n\napp.post('/registerUser',\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return network.registerUser(req.body.userID);\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", res.send(response));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.listen(process.env.PORT, function () {\n  return console.log(\"Example app listening on port \".concat(process.env.PORT, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "process",
        "env",
        "http_proxy",
        "https_proxy",
        "network",
        "require",
        "utils",
        "fs",
        "path",
        "configPath",
        "join",
        "cwd",
        "configJSON",
        "readFileSync",
        "config",
        "JSON",
        "parse",
        "connection_file",
        "netAdmin",
        "orgMSPID",
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "post",
        "req",
        "res",
        "notarizeFile",
        "body",
        "fileDigest",
        "console",
        "log",
        "send",
        "get",
        "connectToNetwork",
        "networkObj",
        "invoke",
        "response",
        "parsedResponse",
        "proposalID",
        "reqObj",
        "userID",
        "proposalObj",
        "Object",
        "values",
        "digest",
        "filename",
        "signature",
        "datapayload",
        "note",
        "undefined",
        "choice",
        "decisionObj",
        "registerUser",
        "listen",
        "PORT"
      ],
      "mappings": "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",
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src",
      "sourcesContent": [
        "\n\n\ndelete process.env.http_proxy;\ndelete process.env.https_proxy;\n\nvar network = require('./fabric/network.js');\nvar utils = require('./utils/notarize.js');\n\n// var utils = require('./utils')\n\nimport 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\n\nconst fs = require('fs');\nconst path = require('path');\n\n\nconst configPath = path.join(process.cwd(), './network-config.json');\nconst configJSON = fs.readFileSync(configPath, 'utf8');\nconst config = JSON.parse(configJSON);\n\nlet connection_file = config.connection_file;\nlet netAdmin = config.netAdmin;\nlet orgMSPID = config.orgMSPID;\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }));\n\n\napp.post('/notarize', async (req, res) => {\n  let fileDigest = await utils.notarizeFile(req.body);\n  console.log(fileDigest);\n  return res.send(fileDigest);\n});\n\napp.post('/body', (req, res) => {\n  console.log(req.body)\n});\n\n\napp.get('/index', (req, res) => {\n  console.log(\"HIT\\n\")\n  return res.send(JSON.parse('{\"msg\":\"My DNA is anchored in my blocks. Who am I\"}'));\n});\n\napp.get('/queryAll', async (req, res) => { // recover reviews of specific proposal in the front-end\n  \n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryAll', '');\n  let parsedResponse = await JSON.parse(response);\n\n  res.send(parsedResponse);\n\n});\n\n\napp.post('/queryProposal', async (req, res) => { // recover reviews of specific proposal in the front-end\n  let networkObj = await network.connectToNetwork(netAdmin);\n  let response = await network.invoke(networkObj, true, 'queryProposal', req.body.proposalID);\n  let parsedResponse = await JSON.parse(response);\n\n  res.send(parsedResponse);\n});\n\n\napp.post('/createProposal', async (req, res) => { // add proposals\n  let reqObj = req.body;\n  let networkObj = await network.connectToNetwork(reqObj.userID);\n  let proposalObj = await utils.notarizeFile(reqObj);\n  let response =  await network.invoke(networkObj, false, 'createProposal', \n                    Object.values([proposalObj.digest, reqObj.filename, proposalObj.signature]));\n  // let parsedResponse = await JSON.parse(response);\n\n  res.send(response);\n\n});\n\napp.post('/submitDecision', async (req, res) => { // add rewiew to proposals\n  let reqObj = req.body;\n  let networkObj = await network.connectToNetwork(reqObj.userID);\n\n  reqObj.datapayload = \"\";\n  \n  console.log(reqObj)\n  let note =  (reqObj.note == undefined) ? \"\" : reqObj.note;\n  reqObj.datapayload = (`${reqObj.proposalID}&${reqObj.choice}&${note}\\n`);\n\n  let decisionObj = await utils.notarizeFile(reqObj);\n  let response =  await network.invoke(networkObj, false, 'submitDecision',\n                     Object.values([reqObj.proposalID, reqObj.choice, decisionObj.signature, note]));\n  res.send(response);\n\n});\n\n\n// app.get('/proposal/:proposalId', (req, res) => { // recover reviews of specific proposal in the front-end\n//   return res.send(query.queryAsset(req.params.proposalId));\n// });\n\n// app.post('/proposal', (req, res) => { // add proposals\n//   invoke.addProposal(...req.body.args);\n// });\n\n// app.post('/review', (req, res) => { // add rewiew to proposals\n//   invoke.addReview(...req.body.args);\n// });\n\napp.post('/registerUser', async(req, res) => { // add users with committee access control\n  let response = await network.registerUser(req.body.userID);\n  return res.send(response);\n  // admin.enrollAdmin(req.body.userId);\n});\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}!`),\n);\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569854002109
  },
  "{\"sourceRoot\":\"/home/doa/fabric-samples/committeeApp/src/fabric\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/doa/fabric-samples/committeeApp\",\"filename\":\"/home/doa/fabric-samples/committeeApp/src/fabric/network.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/doa/fabric-samples/committeeApp\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/fabric",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/doa/fabric-samples/committeeApp",
      "filename": "/home/doa/fabric-samples/committeeApp/src/fabric/network.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/doa/fabric-samples/committeeApp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/doa/fabric-samples/committeeApp/src/fabric/network.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/doa/fabric-samples/committeeApp/src/fabric/network.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/fabric",
        "sourceFileName": "network.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require('fabric-network'),\n    FileSystemWallet = _require.FileSystemWallet,\n    X509WalletMixin = _require.X509WalletMixin,\n    Gateway = _require.Gateway;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar util = require('util'); // const { KJUR, KEYUTIL } = require('jsrsasign');\n// const CryptoJS = require('crypto-js');\n\n\nvar configPath = path.join(process.cwd(), './network-config.json');\nvar configJSON = fs.readFileSync(configPath, 'utf8');\nvar config = JSON.parse(configJSON);\nvar connection_file = config.connection_file;\nvar netAdmin = config.netAdmin;\nvar orgMSPID = config.orgMSPID;\nvar ccpPath = path.join(process.cwd(), connection_file);\nvar ccpJSON = fs.readFileSync(ccpPath, 'utf8');\nvar ccp = JSON.parse(ccpJSON);\n\nexports.connectToNetwork =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(userID) {\n    var gateway, walletPath, wallet, userExists, network, contract, networkObj, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"try to connect user: \".concat(userID, \"\\n\"));\n            gateway = new Gateway();\n            _context.prev = 2;\n            // Create a new file system based wallet for managing identities.\n            walletPath = path.join(process.cwd(), 'wallet');\n            wallet = new FileSystemWallet(walletPath); // Check to see if we've already enrolled the userId.\n\n            _context.next = 7;\n            return wallet.exists(userID);\n\n          case 7:\n            userExists = _context.sent;\n\n            if (userExists) {\n              _context.next = 12;\n              break;\n            }\n\n            console.log('An identity for the user ' + userID + ' does not exist in the wallet');\n            console.log('Run the registerUser.js application before retrying');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            _context.next = 14;\n            return gateway.connect(ccp, {\n              wallet: wallet,\n              identity: userID,\n              discovery: {\n                enabled: false\n              }\n            });\n\n          case 14:\n            _context.next = 16;\n            return gateway.getNetwork('mychannel');\n\n          case 16:\n            network = _context.sent;\n            // Get the contract from the network.\n            contract = network.getContract('committee');\n            networkObj = {\n              contract: contract,\n              network: network,\n              gateway: gateway\n            };\n            return _context.abrupt(\"return\", networkObj);\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(\"Failed to connect to the network: \".concat(_context.t0));\n            console.log(_context.t0.stack);\n            response = {};\n            response.error = _context.t0;\n            return _context.abrupt(\"return\", response);\n\n          case 29:\n            _context.prev = 29;\n            console.log('Done connecting to the network.');\n            return _context.finish(29);\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 22, 29, 32]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.registerUser =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(userID) {\n    var walletPath, wallet, userExists, _response, adminExists, gateway, ca, adminIdentity, secret, enrollment, userIdentity, response, _response2;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(userID);\n            _context2.prev = 1;\n            // Create a new file system based wallet for managing identities.\n            walletPath = path.join(process.cwd(), 'wallet');\n            wallet = new FileSystemWallet(walletPath);\n            console.log(\"Wallet path: \".concat(walletPath)); // Check to see if we've already enrolled the user.\n\n            _context2.next = 7;\n            return wallet.exists(userID);\n\n          case 7:\n            userExists = _context2.sent;\n\n            if (!userExists) {\n              _context2.next = 12;\n              break;\n            }\n\n            _response = \"An identity for the user \".concat(userID, \" already exists in the wallet\");\n            console.log(_response);\n            return _context2.abrupt(\"return\", _response);\n\n          case 12:\n            _context2.next = 14;\n            return wallet.exists(netAdmin);\n\n          case 14:\n            adminExists = _context2.sent;\n\n            if (adminExists) {\n              _context2.next = 19;\n              break;\n            }\n\n            console.log('An identity for the admin user \"admin\" does not exist in the wallet');\n            console.log('Run the enrollAdmin.js application before retrying');\n            return _context2.abrupt(\"return\", '');\n\n          case 19:\n            // Create a new gateway for connecting to our peer node.\n            gateway = new Gateway();\n            _context2.next = 22;\n            return gateway.connect(ccpPath, {\n              wallet: wallet,\n              identity: netAdmin,\n              discovery: {\n                enabled: true,\n                asLocalhost: true\n              }\n            });\n\n          case 22:\n            // Get the CA client object from the gateway for interacting with the CA.\n            ca = gateway.getClient().getCertificateAuthority();\n            adminIdentity = gateway.getCurrentIdentity(); // Register the user, enroll the user, and import the new identity into the wallet.\n\n            _context2.next = 26;\n            return ca.register({\n              affiliation: 'org1.department1',\n              enrollmentID: userID,\n              role: 'client',\n              attrs: [{\n                test: \"test\"\n              }]\n            }, adminIdentity);\n\n          case 26:\n            secret = _context2.sent;\n            _context2.next = 29;\n            return ca.enroll({\n              enrollmentID: userID,\n              enrollmentSecret: secret\n            });\n\n          case 29:\n            enrollment = _context2.sent;\n            userIdentity = X509WalletMixin.createIdentity(orgMSPID, enrollment.certificate, enrollment.key.toBytes());\n            _context2.next = 33;\n            return wallet[\"import\"](userID, userIdentity);\n\n          case 33:\n            response = \"Successfully registered user: \".concat(userID);\n            console.log(response);\n            return _context2.abrupt(\"return\", response);\n\n          case 38:\n            _context2.prev = 38;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(\"Failed to registering user: \".concat(_context2.t0));\n            console.log(_context2.t0.stack);\n            _response2 = {};\n            _response2.error = _context2.t0;\n            return _context2.abrupt(\"return\", JSON.stringify(_response2.error.message));\n\n          case 45:\n            _context2.prev = 45;\n            console.log('Done registering user.');\n            return _context2.finish(45);\n\n          case 48:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 38, 45, 48]]);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.invoke =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(networkObj, isQuery, func, args) {\n    var response, _response3, _networkObj$contract, _response4, _response5;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log('Invoke call');\n            console.log(\"isQuery: \".concat(isQuery, \", func: \").concat(func, \", args: \").concat(args)); // console.log(util.inspect(networkObj));\n\n            if (!(isQuery === true)) {\n              _context3.next = 25;\n              break;\n            }\n\n            console.log('inside isQuery.');\n\n            if (!args) {\n              _context3.next = 16;\n              break;\n            }\n\n            console.log('inside isQuery, args');\n            _context3.next = 9;\n            return networkObj.contract.evaluateTransaction('readProposal', args);\n\n          case 9:\n            response = _context3.sent;\n            console.log(response);\n            _context3.next = 13;\n            return networkObj.gateway.disconnect();\n\n          case 13:\n            return _context3.abrupt(\"return\", response);\n\n          case 16:\n            _context3.next = 18;\n            return networkObj.contract.evaluateTransaction('readAllProposal');\n\n          case 18:\n            _response3 = _context3.sent;\n            console.log(_response3);\n            _context3.next = 22;\n            return networkObj.gateway.disconnect();\n\n          case 22:\n            return _context3.abrupt(\"return\", _response3);\n\n          case 23:\n            _context3.next = 35;\n            break;\n\n          case 25:\n            console.log('notQuery');\n            console.log(args);\n            _context3.next = 29;\n            return (_networkObj$contract = networkObj.contract).submitTransaction.apply(_networkObj$contract, [func].concat(_toConsumableArray(args)));\n\n          case 29:\n            _response4 = _context3.sent;\n            console.log(_response4);\n            console.log(\"transaction: \".concat(func, \" + \").concat(args, \" has been submitted.\"));\n            _context3.next = 34;\n            return networkObj.gateway.disconnect();\n\n          case 34:\n            return _context3.abrupt(\"return\", _response4);\n\n          case 35:\n            _context3.next = 44;\n            break;\n\n          case 37:\n            _context3.prev = 37;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(\"Failed to evaluate transaction: \".concat(_context3.t0));\n            console.log(_context3.t0.stack);\n            _response5 = {};\n            _response5.error = _context3.t0;\n            return _context3.abrupt(\"return\", JSON.stringify(_response5.error.message));\n\n          case 44:\n            _context3.prev = 44;\n            console.log('Done submitting transaction.');\n            return _context3.finish(44);\n\n          case 47:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 37, 44, 47]]);\n  }));\n\n  return function (_x3, _x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // exports.addReview = async function(user, proposalId, choice, note) {\n//     try {\n//         // Create a new file system based wallet for managing identities.\n//         const walletPath = path.join(process.cwd(), 'wallet');\n//         const wallet = new FileSystemWallet(walletPath);\n//         // Collect input parameters\n//         // user: who initiates this query, can be anyone in the wallet\n//         // filename: the file to be validated\n//         // const filename = process.argv[3];\n//         // Check to see if we've already enrolled the userId.\n//         const userExists = await wallet.exists(user);\n//         if (!userExists) {\n//             console.log('An identity for the user ' + user + ' does not exist in the wallet');\n//             console.log('Run the registerUser.js application before retrying');\n//             return;\n//         }\n//         const walletContents = await wallet.export(user);\n//         const userPrivateKey = walletContents.privateKey;\n//         var reviewStr = user + choice + note;\n//         console.log(reviewStr);\n//         var sig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});\n//         sig.init(userPrivateKey, \"\");\n//         sig.updateHex(reviewStr);\n//         var sigValueHex = sig.sign(reviewStr);\n//         var sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\n//         console.log(\"Signature: \" + sigValueBase64);\n//         // Create a new gateway for connecting to our peer node.\n//         const gateway = new Gateway();\n//         await gateway.connect(ccp, { wallet, identity: user, discovery: { enabled: false } });\n//         // Get the network (channel) our contract is deployed to.\n//         const network = await gateway.getNetwork('mychannel');\n//         // Get the contract from the network.\n//         const contract = network.getContract('committee');\n//         // Submit the specified transaction.\n//         // await contract.submitTransaction('createProposal', assetId.toString(), assetName.toString());\n//         // console.log('Transaction has been submitted');\n//         const result = await contract.submitTransaction('reviewProposal', proposalId.toString(), choice.toString());\n//         console.log(`${result} : Transaction has been submitted`);\n//         // Disconnect from the gateway.\n//         await gateway.disconnect();\n//         } catch (error) {\n//             console.error(`Failed to submit transaction: ${error}`);\n//             process.exit(1);\n//         }\n// };\n// var addProposal = async function (user, assetId, assetName) {\n//     try {\n//         // Create a new file system based wallet for managing identities.\n//         const walletPath = path.join(process.cwd(), 'wallet');\n//         const wallet = new FileSystemWallet(walletPath);\n//         // Collect input parameters\n//         // user: who initiates this query, can be anyone in the wallet\n//         // filename: the file to be validated\n//         // const filename = process.argv[3];\n//         // Check to see if we've already enrolled the userId.\n//         const userExists = await wallet.exists(user);\n//         if (!userExists) {\n//             console.log('An identity for the user ' + user + ' does not exist in the wallet');\n//             console.log('Run the registerUser.js application before retrying');\n//             return;\n//         }\n//         // calculate Hash from the specified file\n//         // const fileLoaded = fs.readFileSync(filename, 'utf8');\n//         // var hashToAction = CryptoJS.SHA256(fileLoaded).toString();\n//         // console.log(\"Hash of the file: \" + hashToAction);\n//         // extract certificate info from wallet\n//         const walletContents = await wallet.export(user);\n//         const userPrivateKey = walletContents.privateKey;\n//         var assetStr = assetId + assetName;\n//         var sig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});\n//         sig.init(userPrivateKey, \"\");\n//         sig.updateHex(assetStr);\n//         var sigValueHex = sig.sign();\n//         var sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\n//         console.log(\"Signature: \" + sigValueBase64);\n//         // Create a new gateway for connecting to our peer node.\n//         const gateway = new Gateway();\n//         await gateway.connect(ccp, { wallet, identity: user, discovery: { enabled: false } });\n//         // Get the network (channel) our contract is deployed to.\n//         const network = await gateway.getNetwork('mychannel');\n//         // Get the contract from the network.\n//         const contract = network.getContract('committee');\n//         // Submit the specified transaction.\n//         await contract.submitTransaction('createProposal', assetId.toString(), assetName.toString());\n//         console.log('Transaction has been submitted');\n//         // Disconnect from the gateway.\n//         await gateway.disconnect();\n//     } catch (error) {\n//         console.error(`Failed to submit transaction: ${error}`);\n//         process.exit(1);\n//     }\n// }\n// module.exports = {\n//     addProposal: addProposal,\n//     addReview : addReview\n// };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "network.js"
      ],
      "names": [
        "require",
        "FileSystemWallet",
        "X509WalletMixin",
        "Gateway",
        "fs",
        "path",
        "util",
        "configPath",
        "join",
        "process",
        "cwd",
        "configJSON",
        "readFileSync",
        "config",
        "JSON",
        "parse",
        "connection_file",
        "netAdmin",
        "orgMSPID",
        "ccpPath",
        "ccpJSON",
        "ccp",
        "exports",
        "connectToNetwork",
        "userID",
        "console",
        "log",
        "gateway",
        "walletPath",
        "wallet",
        "exists",
        "userExists",
        "connect",
        "identity",
        "discovery",
        "enabled",
        "getNetwork",
        "network",
        "contract",
        "getContract",
        "networkObj",
        "error",
        "stack",
        "response",
        "registerUser",
        "adminExists",
        "asLocalhost",
        "ca",
        "getClient",
        "getCertificateAuthority",
        "adminIdentity",
        "getCurrentIdentity",
        "register",
        "affiliation",
        "enrollmentID",
        "role",
        "attrs",
        "test",
        "secret",
        "enroll",
        "enrollmentSecret",
        "enrollment",
        "userIdentity",
        "createIdentity",
        "certificate",
        "key",
        "toBytes",
        "stringify",
        "message",
        "invoke",
        "isQuery",
        "func",
        "args",
        "evaluateTransaction",
        "disconnect",
        "submitTransaction"
      ],
      "mappings": "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",
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/fabric",
      "sourcesContent": [
        "'use strict';\r\n\r\nconst { FileSystemWallet,  X509WalletMixin, Gateway } = require('fabric-network');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst util = require('util');\r\n// const { KJUR, KEYUTIL } = require('jsrsasign');\r\n// const CryptoJS = require('crypto-js');\r\n\r\nconst configPath = path.join(process.cwd(), './network-config.json');\r\nconst configJSON = fs.readFileSync(configPath, 'utf8');\r\nconst config = JSON.parse(configJSON);\r\nlet connection_file = config.connection_file;\r\n\r\nlet netAdmin = config.netAdmin;\r\nlet orgMSPID = config.orgMSPID;\r\n\r\nconst ccpPath = path.join(process.cwd(), connection_file);\r\nconst ccpJSON = fs.readFileSync(ccpPath, 'utf8');\r\nconst ccp = JSON.parse(ccpJSON);\r\n\r\n\r\n\r\nexports.connectToNetwork = async function (userID) {\r\n    console.log(`try to connect user: ${userID}\\n`)\r\n\r\n    const gateway = new Gateway();\r\n\r\n    try {\r\n\r\n        // Create a new file system based wallet for managing identities.\r\n        const walletPath = path.join(process.cwd(), 'wallet');\r\n        const wallet = new FileSystemWallet(walletPath);\r\n\r\n                // Check to see if we've already enrolled the userId.\r\n        const userExists = await wallet.exists(userID);\r\n        if (!userExists) {\r\n            console.log('An identity for the user ' + userID + ' does not exist in the wallet');\r\n            console.log('Run the registerUser.js application before retrying');\r\n            return;\r\n        }\r\n\r\n        // Instantiate a new gateway for connecting to our peer node.\r\n        await gateway.connect(ccp, { wallet, identity: userID, discovery: { enabled: false } });\r\n        \r\n        // Get the network (channel) our contract is deployed to.\r\n        const network = await gateway.getNetwork('mychannel');\r\n\r\n        // Get the contract from the network.\r\n        const contract = network.getContract('committee');\r\n\r\n        let networkObj = {\r\n            contract: contract,\r\n            network: network,\r\n            gateway: gateway\r\n        };\r\n\r\n        return networkObj;\r\n\r\n    } catch (error) {\r\n        console.error(`Failed to connect to the network: ${error}`);\r\n        console.log(error.stack)\r\n        let response = {};\r\n        response.error = error;\r\n        return response;\r\n\r\n    } finally {\r\n        console.log('Done connecting to the network.');\r\n    }\r\n};\r\n\r\nexports.registerUser = async function (userID) {\r\n    console.log(userID);\r\n    \r\n    try {\r\n        // Create a new file system based wallet for managing identities.\r\n        const walletPath = path.join(process.cwd(), 'wallet');\r\n        const wallet = new FileSystemWallet(walletPath);\r\n        console.log(`Wallet path: ${walletPath}`);\r\n\r\n        // Check to see if we've already enrolled the user.\r\n        const userExists = await wallet.exists(userID);\r\n        if (userExists) {\r\n            let response = `An identity for the user ${userID} already exists in the wallet`;\r\n            console.log(response);\r\n            return response;\r\n        }\r\n\r\n        // Check to see if we've already enrolled the admin user.\r\n        const adminExists = await wallet.exists(netAdmin);\r\n        if (!adminExists) {\r\n            console.log('An identity for the admin user \"admin\" does not exist in the wallet');\r\n            console.log('Run the enrollAdmin.js application before retrying');\r\n            return '';\r\n        }\r\n\r\n        // Create a new gateway for connecting to our peer node.\r\n        const gateway = new Gateway();\r\n        await gateway.connect(ccpPath, { wallet, identity: netAdmin, discovery: { enabled: true, asLocalhost: true } });\r\n\r\n        // Get the CA client object from the gateway for interacting with the CA.\r\n        const ca = gateway.getClient().getCertificateAuthority();\r\n        const adminIdentity = gateway.getCurrentIdentity();\r\n\r\n        // Register the user, enroll the user, and import the new identity into the wallet.\r\n        const secret = await ca.register({ affiliation: 'org1.department1', enrollmentID: userID, role: 'client', attrs:[{test:\"test\"}]}, adminIdentity);\r\n        const enrollment = await ca.enroll({ enrollmentID: userID, enrollmentSecret: secret });\r\n        const userIdentity = X509WalletMixin.createIdentity(orgMSPID, enrollment.certificate, enrollment.key.toBytes());\r\n        await wallet.import(userID, userIdentity);\r\n        let response = `Successfully registered user: ${userID}`;\r\n        console.log(response);\r\n        return response;\r\n\r\n    } catch (error) {\r\n        console.error(`Failed to registering user: ${error}`);\r\n        console.log(error.stack)\r\n        let response = {};\r\n        response.error = error;\r\n        return JSON.stringify(response.error.message);\r\n\r\n    } finally {\r\n        console.log('Done registering user.')\r\n    }\r\n};\r\n\r\n\r\nexports.invoke = async function(networkObj, isQuery, func, args) {\r\n    try {\r\n        console.log('Invoke call');\r\n        console.log(`isQuery: ${isQuery}, func: ${func}, args: ${args}`)\r\n        // console.log(util.inspect(networkObj));\r\n        if (isQuery === true) {\r\n            console.log('inside isQuery.')\r\n            \r\n            if (args){\r\n                console.log('inside isQuery, args')\r\n\r\n                let response = await networkObj.contract.evaluateTransaction('readProposal', args);\r\n                console.log(response);\r\n                \r\n                await networkObj.gateway.disconnect();\r\n                \r\n                return response;\r\n\r\n            } else {\r\n                let response = await networkObj.contract.evaluateTransaction('readAllProposal');\r\n                console.log(response);\r\n                \r\n                await networkObj.gateway.disconnect();\r\n                \r\n                return response;\r\n            }\r\n        } else {\r\n            console.log('notQuery');\r\n            console.log(args);\r\n            \r\n            let response = await networkObj.contract.submitTransaction(func, ...args)\r\n            console.log(response);\r\n            console.log(`transaction: ${func} + ${args} has been submitted.`)\r\n\r\n            await networkObj.gateway.disconnect();\r\n\r\n            return response;\r\n        }\r\n\r\n    }\r\n\r\n    catch (error){\r\n        console.error(`Failed to evaluate transaction: ${error}`);\r\n        console.log(error.stack)\r\n        let response = {};\r\n        response.error = error;\r\n        return JSON.stringify(response.error.message);\r\n    }\r\n\r\n    finally {\r\n        console.log('Done submitting transaction.');\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// exports.addReview = async function(user, proposalId, choice, note) {\r\n//     try {\r\n\r\n//         // Create a new file system based wallet for managing identities.\r\n//         const walletPath = path.join(process.cwd(), 'wallet');\r\n//         const wallet = new FileSystemWallet(walletPath);\r\n\r\n//         // Collect input parameters\r\n//         // user: who initiates this query, can be anyone in the wallet\r\n//         // filename: the file to be validated\r\n//         // const filename = process.argv[3];\r\n\r\n//         // Check to see if we've already enrolled the userId.\r\n//         const userExists = await wallet.exists(user);\r\n//         if (!userExists) {\r\n//             console.log('An identity for the user ' + user + ' does not exist in the wallet');\r\n//             console.log('Run the registerUser.js application before retrying');\r\n//             return;\r\n//         }\r\n\r\n//         const walletContents = await wallet.export(user);\r\n//         const userPrivateKey = walletContents.privateKey;\r\n\r\n//         var reviewStr = user + choice + note;\r\n//         console.log(reviewStr);\r\n\r\n//         var sig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});\r\n//         sig.init(userPrivateKey, \"\");\r\n//         sig.updateHex(reviewStr);\r\n//         var sigValueHex = sig.sign(reviewStr);\r\n//         var sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\r\n//         console.log(\"Signature: \" + sigValueBase64);\r\n\r\n//         // Create a new gateway for connecting to our peer node.\r\n//         const gateway = new Gateway();\r\n//         await gateway.connect(ccp, { wallet, identity: user, discovery: { enabled: false } });\r\n        \r\n//         // Get the network (channel) our contract is deployed to.\r\n//         const network = await gateway.getNetwork('mychannel');\r\n\r\n//         // Get the contract from the network.\r\n//         const contract = network.getContract('committee');\r\n\r\n//         // Submit the specified transaction.\r\n//         // await contract.submitTransaction('createProposal', assetId.toString(), assetName.toString());\r\n//         // console.log('Transaction has been submitted');\r\n\r\n//         const result = await contract.submitTransaction('reviewProposal', proposalId.toString(), choice.toString());\r\n//         console.log(`${result} : Transaction has been submitted`);\r\n    \r\n//         // Disconnect from the gateway.\r\n//         await gateway.disconnect();\r\n    \r\n//         } catch (error) {\r\n//             console.error(`Failed to submit transaction: ${error}`);\r\n//             process.exit(1);\r\n//         }\r\n// };\r\n\r\n\r\n\r\n// var addProposal = async function (user, assetId, assetName) {\r\n\r\n//     try {\r\n\r\n//         // Create a new file system based wallet for managing identities.\r\n//         const walletPath = path.join(process.cwd(), 'wallet');\r\n//         const wallet = new FileSystemWallet(walletPath);\r\n\r\n//         // Collect input parameters\r\n//         // user: who initiates this query, can be anyone in the wallet\r\n//         // filename: the file to be validated\r\n//         // const filename = process.argv[3];\r\n\r\n//         // Check to see if we've already enrolled the userId.\r\n//         const userExists = await wallet.exists(user);\r\n//         if (!userExists) {\r\n//             console.log('An identity for the user ' + user + ' does not exist in the wallet');\r\n//             console.log('Run the registerUser.js application before retrying');\r\n//             return;\r\n//         }\r\n\r\n//         // calculate Hash from the specified file\r\n//         // const fileLoaded = fs.readFileSync(filename, 'utf8');\r\n//         // var hashToAction = CryptoJS.SHA256(fileLoaded).toString();\r\n//         // console.log(\"Hash of the file: \" + hashToAction);\r\n\r\n//         // extract certificate info from wallet\r\n\r\n//         const walletContents = await wallet.export(user);\r\n//         const userPrivateKey = walletContents.privateKey;\r\n\r\n        \r\n//         var assetStr = assetId + assetName;\r\n        \r\n\r\n\r\n//         var sig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});\r\n//         sig.init(userPrivateKey, \"\");\r\n//         sig.updateHex(assetStr);\r\n//         var sigValueHex = sig.sign();\r\n//         var sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\r\n//         console.log(\"Signature: \" + sigValueBase64);\r\n\r\n//         // Create a new gateway for connecting to our peer node.\r\n//         const gateway = new Gateway();\r\n//         await gateway.connect(ccp, { wallet, identity: user, discovery: { enabled: false } });\r\n        \r\n//         // Get the network (channel) our contract is deployed to.\r\n//         const network = await gateway.getNetwork('mychannel');\r\n\r\n//         // Get the contract from the network.\r\n//         const contract = network.getContract('committee');\r\n\r\n//         // Submit the specified transaction.\r\n//         await contract.submitTransaction('createProposal', assetId.toString(), assetName.toString());\r\n//         console.log('Transaction has been submitted');\r\n\r\n//         // Disconnect from the gateway.\r\n//         await gateway.disconnect();\r\n\r\n//     } catch (error) {\r\n//         console.error(`Failed to submit transaction: ${error}`);\r\n//         process.exit(1);\r\n//     }\r\n// }\r\n\r\n\r\n// module.exports = {\r\n//     addProposal: addProposal,\r\n//     addReview : addReview\r\n// };"
      ]
    },
    "sourceType": "script",
    "mtime": 1569854689097
  },
  "{\"sourceRoot\":\"/home/doa/fabric-samples/committeeApp/src/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/doa/fabric-samples/committeeApp\",\"filename\":\"/home/doa/fabric-samples/committeeApp/src/utils/notarize.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/doa/fabric-samples/committeeApp\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/doa/fabric-samples/committeeApp",
      "filename": "/home/doa/fabric-samples/committeeApp/src/utils/notarize.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/doa/fabric-samples/committeeApp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/doa/fabric-samples/committeeApp/src/utils/notarize.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/doa/fabric-samples/committeeApp/src/utils/notarize.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/utils",
        "sourceFileName": "notarize.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require('fabric-network'),\n    FileSystemWallet = _require.FileSystemWallet;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar _require2 = require('jsrsasign'),\n    KJUR = _require2.KJUR,\n    KEYUTIL = _require2.KEYUTIL;\n\nvar CryptoJS = require('crypto-js'); // const ccpPath = path.resolve(__dirname, '..', 'basic-network', 'connection.json');\n// const ccpJSON = fs.readFileSync(ccpPath, 'utf8');\n// const ccp = JSON.parse(ccpJSON);\n\n\nexports.notarizeFile =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(body) {\n    var walletPath, wallet, user, filename, userExists, hashToAction, walletContents, userPrivateKey, sig, sigValueHex, sigValueBase64;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(body.userID); // Create a new file system based wallet for managing identities.\n\n            walletPath = path.join(process.cwd(), 'wallet');\n            wallet = new FileSystemWallet(walletPath); // Collect input parameters\n            // user: who initiates this query, can be anyone in the wallet, defined by the the email user, i.e. \"user2@itu.int\" -> \"user2\"\n            // filename: the file to be validated\n\n            user = body.userID;\n            filename = body.filename; // Check to see if we've already enrolled the user.\n\n            _context.next = 8;\n            return wallet.exists(user);\n\n          case 8:\n            userExists = _context.sent;\n\n            if (userExists) {\n              _context.next = 13;\n              break;\n            }\n\n            console.log('An identity for the user ' + user + ' does not exist in the wallet');\n            console.log('Run the registerUser.js application before retrying');\n            return _context.abrupt(\"return\");\n\n          case 13:\n            // calculate Hash from the specified file\n            // const fileLoaded = fs.readFileSync(filename, 'utf8');\n            hashToAction = CryptoJS.SHA256(body.datapayload).toString();\n            console.log(\"Hash of the file: \" + hashToAction); // extract certificate info from wallet\n\n            _context.next = 17;\n            return wallet[\"export\"](user);\n\n          case 17:\n            walletContents = _context.sent;\n            userPrivateKey = walletContents.privateKey;\n            sig = new KJUR.crypto.Signature({\n              \"alg\": \"SHA256withECDSA\"\n            });\n            sig.init(userPrivateKey, \"\");\n            sig.updateHex(hashToAction);\n            sigValueHex = sig.sign();\n            sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\n            console.log(\"Signature: \" + sigValueBase64);\n            return _context.abrupt(\"return\", {\n              digest: hashToAction,\n              signature: sigValueBase64\n            });\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Failed to submit transaction: \".concat(_context.t0));\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 32:\n            _context.prev = 32;\n            console.log('Notarization done.');\n            return _context.finish(32);\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 28, 32, 35]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGFyaXplLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJGaWxlU3lzdGVtV2FsbGV0IiwiZnMiLCJwYXRoIiwiS0pVUiIsIktFWVVUSUwiLCJDcnlwdG9KUyIsImV4cG9ydHMiLCJub3Rhcml6ZUZpbGUiLCJib2R5IiwiY29uc29sZSIsImxvZyIsInVzZXJJRCIsIndhbGxldFBhdGgiLCJqb2luIiwicHJvY2VzcyIsImN3ZCIsIndhbGxldCIsInVzZXIiLCJmaWxlbmFtZSIsImV4aXN0cyIsInVzZXJFeGlzdHMiLCJoYXNoVG9BY3Rpb24iLCJTSEEyNTYiLCJkYXRhcGF5bG9hZCIsInRvU3RyaW5nIiwid2FsbGV0Q29udGVudHMiLCJ1c2VyUHJpdmF0ZUtleSIsInByaXZhdGVLZXkiLCJzaWciLCJjcnlwdG8iLCJTaWduYXR1cmUiLCJpbml0IiwidXBkYXRlSGV4Iiwic2lnVmFsdWVIZXgiLCJzaWduIiwic2lnVmFsdWVCYXNlNjQiLCJCdWZmZXIiLCJkaWdlc3QiLCJzaWduYXR1cmUiLCJlcnJvciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztlQUc2QkEsT0FBTyxDQUFDLGdCQUFELEM7SUFBNUJDLGdCLFlBQUFBLGdCOztBQUNSLElBQU1DLEVBQUUsR0FBR0YsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7Z0JBRTBCQSxPQUFPLENBQUMsV0FBRCxDO0lBQXpCSSxJLGFBQUFBLEk7SUFBTUMsTyxhQUFBQSxPOztBQUNkLElBQU1DLFFBQVEsR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBeEIsQyxDQUVBO0FBQ0E7QUFDQTs7O0FBRUFPLE9BQU8sQ0FBQ0MsWUFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQXVCLGlCQUFlQyxJQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWZDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFJLENBQUNHLE1BQWpCLEVBRmUsQ0FHZjs7QUFDTUMsWUFBQUEsVUFKUyxHQUlJVixJQUFJLENBQUNXLElBQUwsQ0FBVUMsT0FBTyxDQUFDQyxHQUFSLEVBQVYsRUFBeUIsUUFBekIsQ0FKSjtBQUtUQyxZQUFBQSxNQUxTLEdBS0EsSUFBSWhCLGdCQUFKLENBQXFCWSxVQUFyQixDQUxBLEVBT2Y7QUFDQTtBQUNBOztBQUNNSyxZQUFBQSxJQVZTLEdBVUZULElBQUksQ0FBQ0csTUFWSDtBQVdUTyxZQUFBQSxRQVhTLEdBV0VWLElBQUksQ0FBQ1UsUUFYUCxFQWFmOztBQWJlO0FBQUEsbUJBY1VGLE1BQU0sQ0FBQ0csTUFBUCxDQUFjRixJQUFkLENBZFY7O0FBQUE7QUFjVEcsWUFBQUEsVUFkUzs7QUFBQSxnQkFlVkEsVUFmVTtBQUFBO0FBQUE7QUFBQTs7QUFnQlhYLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUE4Qk8sSUFBOUIsR0FBcUMsK0JBQWpEO0FBQ0FSLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFEQUFaO0FBakJXOztBQUFBO0FBcUJmO0FBQ0E7QUFDSVcsWUFBQUEsWUF2QlcsR0F1QkloQixRQUFRLENBQUNpQixNQUFULENBQWdCZCxJQUFJLENBQUNlLFdBQXJCLEVBQWtDQyxRQUFsQyxFQXZCSjtBQXdCZmYsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQXVCVyxZQUFuQyxFQXhCZSxDQTBCZjs7QUExQmU7QUFBQSxtQkE0QmNMLE1BQU0sVUFBTixDQUFjQyxJQUFkLENBNUJkOztBQUFBO0FBNEJUUSxZQUFBQSxjQTVCUztBQTZCVEMsWUFBQUEsY0E3QlMsR0E2QlFELGNBQWMsQ0FBQ0UsVUE3QnZCO0FBK0JYQyxZQUFBQSxHQS9CVyxHQStCTCxJQUFJekIsSUFBSSxDQUFDMEIsTUFBTCxDQUFZQyxTQUFoQixDQUEwQjtBQUFDLHFCQUFPO0FBQVIsYUFBMUIsQ0EvQks7QUFnQ2ZGLFlBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTTCxjQUFULEVBQXlCLEVBQXpCO0FBQ0FFLFlBQUFBLEdBQUcsQ0FBQ0ksU0FBSixDQUFjWCxZQUFkO0FBQ0lZLFlBQUFBLFdBbENXLEdBa0NHTCxHQUFHLENBQUNNLElBQUosRUFsQ0g7QUFtQ1hDLFlBQUFBLGNBbkNXLEdBbUNNLElBQUlDLE1BQUosQ0FBV0gsV0FBWCxFQUF3QixLQUF4QixFQUErQlQsUUFBL0IsQ0FBd0MsUUFBeEMsQ0FuQ047QUFvQ2ZmLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFnQnlCLGNBQTVCO0FBcENlLDZDQXNDUjtBQUFDRSxjQUFBQSxNQUFNLEVBQUVoQixZQUFUO0FBQXVCaUIsY0FBQUEsU0FBUyxFQUFFSDtBQUFsQyxhQXRDUTs7QUFBQTtBQUFBO0FBQUE7QUE0Q2YxQixZQUFBQSxPQUFPLENBQUM4QixLQUFSO0FBNUNlOztBQUFBO0FBQUE7QUErQ2Y5QixZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWjtBQS9DZTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF2Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kb2EvZmFicmljLXNhbXBsZXMvY29tbWl0dGVlQXBwL3NyYy91dGlscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5jb25zdCB7IEZpbGVTeXN0ZW1XYWxsZXQgfSA9IHJlcXVpcmUoJ2ZhYnJpYy1uZXR3b3JrJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5jb25zdCB7IEtKVVIsIEtFWVVUSUwgfSA9IHJlcXVpcmUoJ2pzcnNhc2lnbicpO1xuY29uc3QgQ3J5cHRvSlMgPSByZXF1aXJlKCdjcnlwdG8tanMnKTtcblxuLy8gY29uc3QgY2NwUGF0aCA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICdiYXNpYy1uZXR3b3JrJywgJ2Nvbm5lY3Rpb24uanNvbicpO1xuLy8gY29uc3QgY2NwSlNPTiA9IGZzLnJlYWRGaWxlU3luYyhjY3BQYXRoLCAndXRmOCcpO1xuLy8gY29uc3QgY2NwID0gSlNPTi5wYXJzZShjY3BKU09OKTtcblxuZXhwb3J0cy5ub3Rhcml6ZUZpbGUgPSBhc3luYyBmdW5jdGlvbihib2R5KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc29sZS5sb2coYm9keS51c2VySUQpO1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgZmlsZSBzeXN0ZW0gYmFzZWQgd2FsbGV0IGZvciBtYW5hZ2luZyBpZGVudGl0aWVzLlxuICAgICAgICBjb25zdCB3YWxsZXRQYXRoID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICd3YWxsZXQnKTtcbiAgICAgICAgY29uc3Qgd2FsbGV0ID0gbmV3IEZpbGVTeXN0ZW1XYWxsZXQod2FsbGV0UGF0aCk7XG5cbiAgICAgICAgLy8gQ29sbGVjdCBpbnB1dCBwYXJhbWV0ZXJzXG4gICAgICAgIC8vIHVzZXI6IHdobyBpbml0aWF0ZXMgdGhpcyBxdWVyeSwgY2FuIGJlIGFueW9uZSBpbiB0aGUgd2FsbGV0LCBkZWZpbmVkIGJ5IHRoZSB0aGUgZW1haWwgdXNlciwgaS5lLiBcInVzZXIyQGl0dS5pbnRcIiAtPiBcInVzZXIyXCJcbiAgICAgICAgLy8gZmlsZW5hbWU6IHRoZSBmaWxlIHRvIGJlIHZhbGlkYXRlZFxuICAgICAgICBjb25zdCB1c2VyID0gYm9keS51c2VySUQ7XG4gICAgICAgIGNvbnN0IGZpbGVuYW1lID0gYm9keS5maWxlbmFtZTsgXG5cbiAgICAgICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHdlJ3ZlIGFscmVhZHkgZW5yb2xsZWQgdGhlIHVzZXIuXG4gICAgICAgIGNvbnN0IHVzZXJFeGlzdHMgPSBhd2FpdCB3YWxsZXQuZXhpc3RzKHVzZXIpO1xuICAgICAgICBpZiAoIXVzZXJFeGlzdHMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBbiBpZGVudGl0eSBmb3IgdGhlIHVzZXIgJyArIHVzZXIgKyAnIGRvZXMgbm90IGV4aXN0IGluIHRoZSB3YWxsZXQnKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSdW4gdGhlIHJlZ2lzdGVyVXNlci5qcyBhcHBsaWNhdGlvbiBiZWZvcmUgcmV0cnlpbmcnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNhbGN1bGF0ZSBIYXNoIGZyb20gdGhlIHNwZWNpZmllZCBmaWxlXG4gICAgICAgIC8vIGNvbnN0IGZpbGVMb2FkZWQgPSBmcy5yZWFkRmlsZVN5bmMoZmlsZW5hbWUsICd1dGY4Jyk7XG4gICAgICAgIHZhciBoYXNoVG9BY3Rpb24gPSBDcnlwdG9KUy5TSEEyNTYoYm9keS5kYXRhcGF5bG9hZCkudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJIYXNoIG9mIHRoZSBmaWxlOiBcIiArIGhhc2hUb0FjdGlvbik7XG5cbiAgICAgICAgLy8gZXh0cmFjdCBjZXJ0aWZpY2F0ZSBpbmZvIGZyb20gd2FsbGV0XG5cbiAgICAgICAgY29uc3Qgd2FsbGV0Q29udGVudHMgPSBhd2FpdCB3YWxsZXQuZXhwb3J0KHVzZXIpO1xuICAgICAgICBjb25zdCB1c2VyUHJpdmF0ZUtleSA9IHdhbGxldENvbnRlbnRzLnByaXZhdGVLZXk7XG5cbiAgICAgICAgdmFyIHNpZyA9IG5ldyBLSlVSLmNyeXB0by5TaWduYXR1cmUoe1wiYWxnXCI6IFwiU0hBMjU2d2l0aEVDRFNBXCJ9KTtcbiAgICAgICAgc2lnLmluaXQodXNlclByaXZhdGVLZXksIFwiXCIpO1xuICAgICAgICBzaWcudXBkYXRlSGV4KGhhc2hUb0FjdGlvbik7XG4gICAgICAgIHZhciBzaWdWYWx1ZUhleCA9IHNpZy5zaWduKCk7XG4gICAgICAgIHZhciBzaWdWYWx1ZUJhc2U2NCA9IG5ldyBCdWZmZXIoc2lnVmFsdWVIZXgsICdoZXgnKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiU2lnbmF0dXJlOiBcIiArIHNpZ1ZhbHVlQmFzZTY0KTtcblxuICAgICAgICByZXR1cm4ge2RpZ2VzdDogaGFzaFRvQWN0aW9uLCBzaWduYXR1cmU6IHNpZ1ZhbHVlQmFzZTY0fTtcblxuXG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBnYXRld2F5IGZvciBjb25uZWN0aW5nIHRvIG91ciBwZWVyIG5vZGUuXG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gc3VibWl0IHRyYW5zYWN0aW9uOiAke2Vycm9yfWApO1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgY29uc29sZS5sb2coJ05vdGFyaXphdGlvbiBkb25lLicpXG4gICAgfVxufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "notarize.js"
      ],
      "names": [
        "require",
        "FileSystemWallet",
        "fs",
        "path",
        "KJUR",
        "KEYUTIL",
        "CryptoJS",
        "exports",
        "notarizeFile",
        "body",
        "console",
        "log",
        "userID",
        "walletPath",
        "join",
        "process",
        "cwd",
        "wallet",
        "user",
        "filename",
        "exists",
        "userExists",
        "hashToAction",
        "SHA256",
        "datapayload",
        "toString",
        "walletContents",
        "userPrivateKey",
        "privateKey",
        "sig",
        "crypto",
        "Signature",
        "init",
        "updateHex",
        "sigValueHex",
        "sign",
        "sigValueBase64",
        "Buffer",
        "digest",
        "signature",
        "error"
      ],
      "mappings": "AAAA;;;;;;eAG6BA,OAAO,CAAC,gBAAD,C;IAA5BC,gB,YAAAA,gB;;AACR,IAAMC,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;gBAE0BA,OAAO,CAAC,WAAD,C;IAAzBI,I,aAAAA,I;IAAMC,O,aAAAA,O;;AACd,IAAMC,QAAQ,GAAGN,OAAO,CAAC,WAAD,CAAxB,C,CAEA;AACA;AACA;;;AAEAO,OAAO,CAACC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuB,iBAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB,EAFe,CAGf;;AACMC,YAAAA,UAJS,GAIIV,IAAI,CAACW,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,QAAzB,CAJJ;AAKTC,YAAAA,MALS,GAKA,IAAIhB,gBAAJ,CAAqBY,UAArB,CALA,EAOf;AACA;AACA;;AACMK,YAAAA,IAVS,GAUFT,IAAI,CAACG,MAVH;AAWTO,YAAAA,QAXS,GAWEV,IAAI,CAACU,QAXP,EAaf;;AAbe;AAAA,mBAcUF,MAAM,CAACG,MAAP,CAAcF,IAAd,CAdV;;AAAA;AAcTG,YAAAA,UAdS;;AAAA,gBAeVA,UAfU;AAAA;AAAA;AAAA;;AAgBXX,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BO,IAA9B,GAAqC,+BAAjD;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AAjBW;;AAAA;AAqBf;AACA;AACIW,YAAAA,YAvBW,GAuBIhB,QAAQ,CAACiB,MAAT,CAAgBd,IAAI,CAACe,WAArB,EAAkCC,QAAlC,EAvBJ;AAwBff,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBW,YAAnC,EAxBe,CA0Bf;;AA1Be;AAAA,mBA4BcL,MAAM,UAAN,CAAcC,IAAd,CA5Bd;;AAAA;AA4BTQ,YAAAA,cA5BS;AA6BTC,YAAAA,cA7BS,GA6BQD,cAAc,CAACE,UA7BvB;AA+BXC,YAAAA,GA/BW,GA+BL,IAAIzB,IAAI,CAAC0B,MAAL,CAAYC,SAAhB,CAA0B;AAAC,qBAAO;AAAR,aAA1B,CA/BK;AAgCfF,YAAAA,GAAG,CAACG,IAAJ,CAASL,cAAT,EAAyB,EAAzB;AACAE,YAAAA,GAAG,CAACI,SAAJ,CAAcX,YAAd;AACIY,YAAAA,WAlCW,GAkCGL,GAAG,CAACM,IAAJ,EAlCH;AAmCXC,YAAAA,cAnCW,GAmCM,IAAIC,MAAJ,CAAWH,WAAX,EAAwB,KAAxB,EAA+BT,QAA/B,CAAwC,QAAxC,CAnCN;AAoCff,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgByB,cAA5B;AApCe,6CAsCR;AAACE,cAAAA,MAAM,EAAEhB,YAAT;AAAuBiB,cAAAA,SAAS,EAAEH;AAAlC,aAtCQ;;AAAA;AAAA;AAAA;AA4Cf1B,YAAAA,OAAO,CAAC8B,KAAR;AA5Ce;;AAAA;AAAA;AA+Cf9B,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AA/Ce;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/home/doa/fabric-samples/committeeApp/src/utils",
      "sourcesContent": [
        "'use strict';\n\n\nconst { FileSystemWallet } = require('fabric-network');\nconst fs = require('fs');\nconst path = require('path');\n\nconst { KJUR, KEYUTIL } = require('jsrsasign');\nconst CryptoJS = require('crypto-js');\n\n// const ccpPath = path.resolve(__dirname, '..', 'basic-network', 'connection.json');\n// const ccpJSON = fs.readFileSync(ccpPath, 'utf8');\n// const ccp = JSON.parse(ccpJSON);\n\nexports.notarizeFile = async function(body) {\n    try {\n        console.log(body.userID);\n        // Create a new file system based wallet for managing identities.\n        const walletPath = path.join(process.cwd(), 'wallet');\n        const wallet = new FileSystemWallet(walletPath);\n\n        // Collect input parameters\n        // user: who initiates this query, can be anyone in the wallet, defined by the the email user, i.e. \"user2@itu.int\" -> \"user2\"\n        // filename: the file to be validated\n        const user = body.userID;\n        const filename = body.filename; \n\n        // Check to see if we've already enrolled the user.\n        const userExists = await wallet.exists(user);\n        if (!userExists) {\n            console.log('An identity for the user ' + user + ' does not exist in the wallet');\n            console.log('Run the registerUser.js application before retrying');\n            return;\n        }\n\n        // calculate Hash from the specified file\n        // const fileLoaded = fs.readFileSync(filename, 'utf8');\n        var hashToAction = CryptoJS.SHA256(body.datapayload).toString();\n        console.log(\"Hash of the file: \" + hashToAction);\n\n        // extract certificate info from wallet\n\n        const walletContents = await wallet.export(user);\n        const userPrivateKey = walletContents.privateKey;\n\n        var sig = new KJUR.crypto.Signature({\"alg\": \"SHA256withECDSA\"});\n        sig.init(userPrivateKey, \"\");\n        sig.updateHex(hashToAction);\n        var sigValueHex = sig.sign();\n        var sigValueBase64 = new Buffer(sigValueHex, 'hex').toString('base64');\n        console.log(\"Signature: \" + sigValueBase64);\n\n        return {digest: hashToAction, signature: sigValueBase64};\n\n\n        // Create a new gateway for connecting to our peer node.\n\n    } catch (error) {\n        console.error(`Failed to submit transaction: ${error}`);\n        return error;\n    } finally {\n        console.log('Notarization done.')\n    }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569837412325
  }
}